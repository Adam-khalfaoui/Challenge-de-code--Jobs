{"ast":null,"code":"var _jsxFileName = \"/Users/adamkhalfaoui/Desktop/GitHUb/Challenge-de-code--Jobs/Frontend/src/main-component/JobsPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Navbar from '../../components/Navbar';\nimport PageTitle from '../../components/pagetitle';\nimport Jobs from '../../components/Jobs';\nimport Footer from '../../components/footer';\nimport Scrollbar from '../../components/scrollbar';\nimport jobsService from \"../../services/jobsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobsPage = () => {\n  _s();\n  var _products;\n  const [allJobs, setAllJobs] = useState([]);\n  useEffect(() => {\n    jobsService.allJobs().then(res => {});\n  }, []);\n  useEffect(() => {\n    let mounted = true;\n    jobsService.allJobs().then(res => {\n      if (mounted) {\n        setAllJobs(res);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageTitle, {\n      pageTitle: 'Latest Jobs',\n      pagesub: 'Jobs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), (_products = products) === null || _products === void 0 ? void 0 : _products.map((product, index) => /*#__PURE__*/_jsxDEV(Jobs, {\n      product: product\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Jobs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(JobsPage, \"hLe+zsVlsq1ajbLAF2a7zPhiOQo=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Navbar","PageTitle","Jobs","Footer","Scrollbar","jobsService","JobsPage","allJobs","setAllJobs","then","res","mounted","products","map","product","index"],"sources":["/Users/adamkhalfaoui/Desktop/GitHUb/Challenge-de-code--Jobs/Frontend/src/main-component/JobsPage/index.js"],"sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\nimport Navbar from '../../components/Navbar'\r\nimport PageTitle from '../../components/pagetitle'\r\nimport Jobs  from '../../components/Jobs'\r\nimport Footer from '../../components/footer'\r\nimport Scrollbar from '../../components/scrollbar'\r\nimport jobsService from \"../../services/jobsService\";\r\n\r\n\r\nconst JobsPage =() => {\r\n\r\n    const [allJobs, setAllJobs] = useState([]);\r\n\r\n    useEffect(()=>{\r\njobsService.allJobs().then(res =>{\r\n\r\n})\r\n},[])\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        jobsService.allJobs()\r\n            .then(res => {\r\n                if(mounted) {\r\n                    setAllJobs(res)\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n    return(\r\n        <Fragment>\r\n            <Navbar/>\r\n            <PageTitle pageTitle={'Latest Jobs'} pagesub={'Jobs'}/>\r\n            {products?.map((product, index) => (\r\n                <Jobs\r\n                    product={product}\r\n                    key={index}\r\n                ></Jobs>\r\n            ))}\r\n            <Jobs/>\r\n            <Footer/>\r\n            <Scrollbar/>\r\n        </Fragment>\r\n    )\r\n};\r\nexport default JobsPage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,IAAI,MAAO,uBAAuB;AACzC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,WAAW,MAAM,4BAA4B;AAAC;AAGrD,MAAMC,QAAQ,GAAE,MAAM;EAAA;EAAA;EAElB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAI;IAClBO,WAAW,CAACE,OAAO,EAAE,CAACE,IAAI,CAACC,GAAG,IAAG,CAEjC,CAAC,CAAC;EACF,CAAC,EAAC,EAAE,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACZ,IAAIa,OAAO,GAAG,IAAI;IAClBN,WAAW,CAACE,OAAO,EAAE,CAChBE,IAAI,CAACC,GAAG,IAAI;MACT,IAAGC,OAAO,EAAE;QACRH,UAAU,CAACE,GAAG,CAAC;MACnB;IACJ,CAAC,CAAC;IACN,OAAO,MAAMC,OAAO,GAAG,KAAK;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,QAAQ;IAAA,wBACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,SAAS;MAAC,SAAS,EAAE,aAAc;MAAC,OAAO,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,eACtDC,QAAQ,8CAAR,UAAUC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC1B,QAAC,IAAI;MACD,OAAO,EAAED;IAAQ,GACZC,KAAK;MAAA;MAAA;MAAA;IAAA,QAEjB,CAAC,eACF,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAE,eACP,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEnB,CAAC;AAAC,GApCIT,QAAQ;AAAA,KAARA,QAAQ;AAqCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}