{"ast":null,"code":"import axios from \"axios\";\nconst JOBS_BASE_URL = \"http://localhost:8089/SpringMVC/job\";\nclass jobsService {\n  addJob(job) {\n    return axios.post(JOBS_BASE_URL + '/add', job, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  }\n  allJobs() {\n    return axios.get(JOBS_BASE_URL + '/all');\n  }\n  findById() {\n    return axios.get(JOBS_BASE_URL + '/all');\n  }\n}\nexport default new jobsService();","map":{"version":3,"names":["axios","JOBS_BASE_URL","jobsService","addJob","job","post","headers","localStorage","getItem","allJobs","get","findById"],"sources":["/Users/adamkhalfaoui/Desktop/GitHUb/Challenge-de-code--Jobs/Frontend/src/services/jobsService.js"],"sourcesContent":["import axios from \"axios\";\nconst JOBS_BASE_URL = \"http://localhost:8089/SpringMVC/job\";\n\nclass jobsService {\n\n\n\n    addJob(job){\n        return axios.post(JOBS_BASE_URL+ '/add', job, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        });\n    }\n\n    allJobs(){\n        return axios.get(JOBS_BASE_URL+'/all');\n    }\n\n    findById(){\n        return axios.get(JOBS_BASE_URL+'/all');\n    }\n\n\n\n} export default new jobsService()\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,aAAa,GAAG,qCAAqC;AAE3D,MAAMC,WAAW,CAAC;EAIdC,MAAM,CAACC,GAAG,EAAC;IACP,OAAOJ,KAAK,CAACK,IAAI,CAACJ,aAAa,GAAE,MAAM,EAAEG,GAAG,EAAE;MAC1CE,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC7D;IACJ,CAAC,CAAC;EACN;EAEAC,OAAO,GAAE;IACL,OAAOT,KAAK,CAACU,GAAG,CAACT,aAAa,GAAC,MAAM,CAAC;EAC1C;EAEAU,QAAQ,GAAE;IACN,OAAOX,KAAK,CAACU,GAAG,CAACT,aAAa,GAAC,MAAM,CAAC;EAC1C;AAIJ;AAAE,eAAe,IAAIC,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}