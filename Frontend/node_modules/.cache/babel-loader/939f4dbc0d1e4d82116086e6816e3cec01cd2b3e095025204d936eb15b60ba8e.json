{"ast":null,"code":"var _jsxFileName = \"/Users/adamkhalfaoui/Desktop/GitHUb/Challenge-de-code--Jobs/Frontend/src/main-component/JobsPage/index.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Navbar from '../../components/Navbar';\nimport PageTitle from '../../components/pagetitle';\nimport Jobs from '../../components/Jobs';\nimport Footer from '../../components/footer';\nimport Scrollbar from '../../components/scrollbar';\nimport jobsService from \"../../services/jobsService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst JobsPage = () => {\n  _s();\n  const [allJobs, setAllJobs] = useState([]);\n  useEffect(() => {\n    let mounted = true;\n    jobsService.allJobs().then(res => {\n      if (mounted) {\n        setAllJobs(res.data);\n      }\n    });\n    return () => mounted = false;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PageTitle, {\n      pageTitle: 'Latest Jobs',\n      pagesub: 'Jobs'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), allJobs === null || allJobs === void 0 ? void 0 : allJobs.map(job => /*#__PURE__*/_createElement(Jobs, {\n      ...job,\n      key: job.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/_jsxDEV(Jobs, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Scrollbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(JobsPage, \"cMvphNANjgNr6t70AWEbaZ2IpI0=\");\n_c = JobsPage;\nexport default JobsPage;\nvar _c;\n$RefreshReg$(_c, \"JobsPage\");","map":{"version":3,"names":["React","Fragment","useEffect","useState","Navbar","PageTitle","Jobs","Footer","Scrollbar","jobsService","JobsPage","allJobs","setAllJobs","mounted","then","res","data","map","job","id"],"sources":["/Users/adamkhalfaoui/Desktop/GitHUb/Challenge-de-code--Jobs/Frontend/src/main-component/JobsPage/index.js"],"sourcesContent":["import React, {Fragment, useEffect, useState} from 'react';\r\nimport Navbar from '../../components/Navbar'\r\nimport PageTitle from '../../components/pagetitle'\r\nimport Jobs  from '../../components/Jobs'\r\nimport Footer from '../../components/footer'\r\nimport Scrollbar from '../../components/scrollbar'\r\nimport jobsService from \"../../services/jobsService\";\r\n\r\n\r\nconst JobsPage =() => {\r\n\r\n    const [allJobs, setAllJobs] = useState([]);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        let mounted = true;\r\n        jobsService.allJobs()\r\n            .then(res => {\r\n                if(mounted) {\r\n                    setAllJobs(res.data)\r\n\r\n                }\r\n            })\r\n        return () => mounted = false;\r\n    }, [])\r\n\r\n    return(\r\n        <Fragment>\r\n            <Navbar/>\r\n            <PageTitle pageTitle={'Latest Jobs'} pagesub={'Jobs'}/>\r\n            {allJobs?.map((job)=>(\r\n                <Jobs\r\n                    {...job}\r\n                    key={job.id}\r\n\r\n                ></Jobs>\r\n            ))}\r\n\r\n            <Jobs/>\r\n            <Footer/>\r\n            <Scrollbar/>\r\n        </Fragment>\r\n    )\r\n};\r\nexport default JobsPage;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC1D,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,IAAI,MAAO,uBAAuB;AACzC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,WAAW,MAAM,4BAA4B;AAAC;AAAA;AAGrD,MAAMC,QAAQ,GAAE,MAAM;EAAA;EAElB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAI1CD,SAAS,CAAC,MAAM;IACZ,IAAIW,OAAO,GAAG,IAAI;IAClBJ,WAAW,CAACE,OAAO,EAAE,CAChBG,IAAI,CAACC,GAAG,IAAI;MACT,IAAGF,OAAO,EAAE;QACRD,UAAU,CAACG,GAAG,CAACC,IAAI,CAAC;MAExB;IACJ,CAAC,CAAC;IACN,OAAO,MAAMH,OAAO,GAAG,KAAK;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,QAAQ;IAAA,wBACL,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,SAAS;MAAC,SAAS,EAAE,aAAc;MAAC,OAAO,EAAE;IAAO;MAAA;MAAA;MAAA;IAAA,QAAE,EACtDF,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEM,GAAG,CAAEC,GAAG,iBACd,eAAC,IAAI;MAAA,GACGA,GAAG;MACP,GAAG,EAAEA,GAAG,CAACC,EAAG;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAGnB,CAAC,eAEF,QAAC,IAAI;MAAA;MAAA;MAAA;IAAA,QAAE,eACP,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAE,eACT,QAAC,SAAS;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEnB,CAAC;AAAC,GAnCIT,QAAQ;AAAA,KAARA,QAAQ;AAoCd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}