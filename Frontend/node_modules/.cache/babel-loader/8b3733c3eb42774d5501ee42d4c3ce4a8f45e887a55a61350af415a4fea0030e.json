{"ast":null,"code":"import axios from \"axios\";\nconst JOBS_BASE_URL = \"http://localhost:8089/SpringMVC/job\";\nclass jobsService {\n  addJob(job) {\n    return axios.post(JOBS_BASE_URL + '/add', job, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  }\n  allJobs() {\n    return axios.get(JOBS_BASE_URL + '/all');\n  }\n  findById(id) {\n    return axios.get(JOBS_BASE_URL + '/find/' + id);\n  }\n  applyToJob(job, id) {\n    return axios.post(JOBS_BASE_URL + '/applyToJob/' + id, job, {\n      headers: {\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  }\n  Upload(file) {\n    let formData = new FormData();\n    formData.append(\"file\", file);\n    return axios.post(JOBS_BASE_URL + '/uploadFile/', formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      }\n    });\n  }\n  addview(id) {\n    return axios.put(JOBS_BASE_URL + '/addview/' + id);\n  }\n}\nexport default new jobsService();","map":{"version":3,"names":["axios","JOBS_BASE_URL","jobsService","addJob","job","post","headers","localStorage","getItem","allJobs","get","findById","id","applyToJob","Upload","file","formData","FormData","append","addview","put"],"sources":["/Users/adamkhalfaoui/Desktop/GitHUb/Challenge-de-code--Jobs/Frontend/src/services/jobsService.js"],"sourcesContent":["import axios from \"axios\";\nconst JOBS_BASE_URL = \"http://localhost:8089/SpringMVC/job\";\n\nclass jobsService {\n\n\n\n    addJob(job){\n        return axios.post(JOBS_BASE_URL+ '/add', job, {\n            headers: {\n                'Authorization': `Bearer ${localStorage.getItem('token')}`\n            },\n        });\n    }\n\n    allJobs(){\n        return axios.get(JOBS_BASE_URL+'/all');\n    }\n\n    findById(id){\n        return axios.get(JOBS_BASE_URL+'/find/'+id);\n    }\n\n    applyToJob(job,id){\n\n        return axios.post(JOBS_BASE_URL+'/applyToJob/'+id ,job ,{\n            headers: {\n\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n\n            },\n        });\n    }\n    Upload(file){\n        let formData = new FormData();\n\n        formData.append(\"file\", file);\n        return axios.post(JOBS_BASE_URL+'/uploadFile/',formData,{\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            },\n        });\n    }\n\n    addview(id){\n        return axios.put(JOBS_BASE_URL+'/addview/'+id);\n    }\n\n} export default new jobsService()\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,MAAMC,aAAa,GAAG,qCAAqC;AAE3D,MAAMC,WAAW,CAAC;EAIdC,MAAM,CAACC,GAAG,EAAC;IACP,OAAOJ,KAAK,CAACK,IAAI,CAACJ,aAAa,GAAE,MAAM,EAAEG,GAAG,EAAE;MAC1CE,OAAO,EAAE;QACL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC7D;IACJ,CAAC,CAAC;EACN;EAEAC,OAAO,GAAE;IACL,OAAOT,KAAK,CAACU,GAAG,CAACT,aAAa,GAAC,MAAM,CAAC;EAC1C;EAEAU,QAAQ,CAACC,EAAE,EAAC;IACR,OAAOZ,KAAK,CAACU,GAAG,CAACT,aAAa,GAAC,QAAQ,GAACW,EAAE,CAAC;EAC/C;EAEAC,UAAU,CAACT,GAAG,EAACQ,EAAE,EAAC;IAEd,OAAOZ,KAAK,CAACK,IAAI,CAACJ,aAAa,GAAC,cAAc,GAACW,EAAE,EAAER,GAAG,EAAE;MACpDE,OAAO,EAAE;QAEL,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAE7D;IACJ,CAAC,CAAC;EACN;EACAM,MAAM,CAACC,IAAI,EAAC;IACR,IAAIC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE7BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAC7B,OAAOf,KAAK,CAACK,IAAI,CAACJ,aAAa,GAAC,cAAc,EAACe,QAAQ,EAAC;MACpDV,OAAO,EAAE;QACL,cAAc,EAAE,qBAAqB;QACrC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC7D;IACJ,CAAC,CAAC;EACN;EAEAW,OAAO,CAACP,EAAE,EAAC;IACP,OAAOZ,KAAK,CAACoB,GAAG,CAACnB,aAAa,GAAC,WAAW,GAACW,EAAE,CAAC;EAClD;AAEJ;AAAE,eAAe,IAAIV,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}